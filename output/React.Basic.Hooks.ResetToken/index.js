// Generated by purs version 0.15.2
import * as Control_Applicative from "../Control.Applicative/index.js";
import * as Data_Eq from "../Data.Eq/index.js";
import * as Data_Show from "../Data.Show/index.js";
import * as Data_Tuple from "../Data.Tuple/index.js";
import * as React_Basic_Hooks from "../React.Basic.Hooks/index.js";
import * as React_Basic_Hooks_Internal from "../React.Basic.Hooks.Internal/index.js";
import * as Type_Equality from "../Type.Equality/index.js";
var UseResetToken = function (x) {
    return x;
};
var ResetToken = function (x) {
    return x;
};
var showResetToken = {
    show: function (v) {
        return "(ResetToken " + (Data_Show.show(Data_Show.showInt)(v) + ")");
    }
};
var ntUseResetToken = {
    Coercible0: function () {
        return undefined;
    }
};
var useResetToken = /* #__PURE__ */ React_Basic_Hooks_Internal.coerceHook()(/* #__PURE__ */ React_Basic_Hooks_Internal.bind(React_Basic_Hooks_Internal.ixBindRender)(/* #__PURE__ */ React_Basic_Hooks.useState(0))(function (v) {
    var reset = v.value1(function (v1) {
        return v1 + 1 | 0;
    });
    return Control_Applicative.pure(React_Basic_Hooks_Internal.applicativeRender(Type_Equality.refl))(new Data_Tuple.Tuple(v.value0, reset));
}));
var eqResetToken = Data_Eq.eqInt;
export {
    UseResetToken,
    useResetToken,
    ntUseResetToken,
    eqResetToken,
    showResetToken
};
