// Generated by purs version 0.15.2
import * as Control_Alt from "../Control.Alt/index.js";
import * as Control_Applicative from "../Control.Applicative/index.js";
import * as Control_Bind from "../Control.Bind/index.js";
import * as Data_Array from "../Data.Array/index.js";
import * as Data_Foldable from "../Data.Foldable/index.js";
import * as Data_Functor from "../Data.Functor/index.js";
import * as Data_List_Types from "../Data.List.Types/index.js";
import * as Data_Maybe from "../Data.Maybe/index.js";
import * as Data_String_CodeUnits from "../Data.String.CodeUnits/index.js";
import * as Data_String_Common from "../Data.String.Common/index.js";
import * as Data_String_Regex from "../Data.String.Regex/index.js";
import * as Data_String_Regex_Flags from "../Data.String.Regex.Flags/index.js";
import * as Data_String_Regex_Unsafe from "../Data.String.Regex.Unsafe/index.js";
import * as Data_Unit from "../Data.Unit/index.js";
import * as StringParser_CodeUnits from "../StringParser.CodeUnits/index.js";
import * as StringParser_Combinators from "../StringParser.Combinators/index.js";
import * as StringParser_Parser from "../StringParser.Parser/index.js";
var CommaSeparated = /* #__PURE__ */ (function () {
    function CommaSeparated() {

    };
    CommaSeparated.value = new CommaSeparated();
    return CommaSeparated;
})();
var TabSeparated = /* #__PURE__ */ (function () {
    function TabSeparated() {

    };
    TabSeparated.value = new TabSeparated();
    return TabSeparated;
})();
var escapeField = function (csvType) {
    return function (s) {
        var separator = (function () {
            if (csvType instanceof CommaSeparated) {
                return "(,|\"|\x0a)";
            };
            if (csvType instanceof TabSeparated) {
                return "(\x09|\"|\x0a)";
            };
            throw new Error("Failed pattern match at Text.CSV.Internal (line 64, column 21 - line 66, column 41): " + [ csvType.constructor.name ]);
        })();
        var quote = function (s$prime) {
            return "\"" + (s$prime + "\"");
        };
        var $2 = Data_String_Regex.test(Data_String_Regex_Unsafe.unsafeRegex(separator)(Data_String_Regex_Flags.noFlags))(s);
        if ($2) {
            return quote(Data_String_Common.replaceAll("\"")("\"\"")(s));
        };
        return s;
    };
};
var csvParser = function (csvType) {
    var separator = (function () {
        if (csvType instanceof CommaSeparated) {
            return ",";
        };
        if (csvType instanceof TabSeparated) {
            return "\x09";
        };
        throw new Error("Failed pattern match at Text.CSV.Internal (line 31, column 17 - line 33, column 29): " + [ csvType.constructor.name ]);
    })();
    var newline = Control_Bind.bind(StringParser_Parser.bindParser)(StringParser_CodeUnits.oneOf(Data_Foldable.foldableArray)([ "\x0d", "\x0a" ]))(function (a) {
        if (a === "\x0d") {
            return StringParser_Combinators.optional(StringParser_CodeUnits["char"]("\x0a"));
        };
        return Control_Applicative.pure(StringParser_Parser.applicativeParser)(Data_Unit.unit);
    });
    var getNonescaped = Data_Functor.map(StringParser_Parser.functorParser)(Data_String_CodeUnits.fromCharArray)(Data_Array.many(StringParser_Parser.alternativeParser)(StringParser_Parser.lazyParser)(StringParser_CodeUnits.noneOf(Data_Foldable.foldableArray)([ separator, "\x0d", "\x0a" ])));
    var getEscaped = (function () {
        var quotedString = Control_Bind.discard(Control_Bind.discardUnit)(StringParser_Parser.bindParser)(Data_Functor["void"](StringParser_Parser.functorParser)(StringParser_CodeUnits["char"]("\"")))(function () {
            return Data_Functor.map(StringParser_Parser.functorParser)((function () {
                var $8 = Data_Array.fromFoldable(Data_List_Types.foldableList);
                return function ($9) {
                    return Data_String_CodeUnits.fromCharArray($8($9));
                };
            })())(StringParser_Combinators.manyTill(StringParser_CodeUnits.anyChar)(StringParser_CodeUnits["char"]("\"")));
        });
        return Data_Functor.map(StringParser_Parser.functorParser)(Data_String_Common.joinWith("\""))(Data_Array.some(StringParser_Parser.alternativeParser)(StringParser_Parser.lazyParser)(quotedString));
    })();
    var fieldParser = Control_Alt.alt(StringParser_Parser.altParser)(getEscaped)(getNonescaped);
    var recordParser = Data_Functor.map(StringParser_Parser.functorParser)(Data_Array.fromFoldable(Data_List_Types.foldableList))(StringParser_Combinators.sepBy(fieldParser)(StringParser_CodeUnits["char"](separator)));
    return Control_Bind.bind(StringParser_Parser.bindParser)(Data_Functor.map(StringParser_Parser.functorParser)(Data_Array.fromFoldable(Data_List_Types.foldableNonEmptyList))(StringParser_Combinators.sepBy1(recordParser)(newline)))(function (x) {
        var v = Data_Array.head(Data_Array.reverse(x));
        if (v instanceof Data_Maybe.Just && (v.value0.length === 1 && v["value0"][0] === "")) {
            return Control_Applicative.pure(StringParser_Parser.applicativeParser)(Data_Array.dropEnd(1)(x));
        };
        return Control_Applicative.pure(StringParser_Parser.applicativeParser)(x);
    });
};
export {
    CommaSeparated,
    TabSeparated,
    csvParser,
    escapeField
};
