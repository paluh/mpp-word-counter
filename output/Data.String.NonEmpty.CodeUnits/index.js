// Generated by purs version 0.15.2
import * as Data_Array_NonEmpty from "../Data.Array.NonEmpty/index.js";
import * as Data_Maybe from "../Data.Maybe/index.js";
import * as Data_Semigroup_Foldable from "../Data.Semigroup.Foldable/index.js";
import * as Data_String_CodeUnits from "../Data.String.CodeUnits/index.js";
import * as Data_String_NonEmpty_Internal from "../Data.String.NonEmpty.Internal/index.js";
import * as Data_String_Unsafe from "../Data.String.Unsafe/index.js";
var toNonEmptyString = Data_String_NonEmpty_Internal.NonEmptyString;
var snoc = function (c) {
    return function (s) {
        return toNonEmptyString(s + Data_String_CodeUnits.singleton(c));
    };
};
var singleton = function ($16) {
    return toNonEmptyString(Data_String_CodeUnits.singleton($16));
};
var liftS = function (f) {
    return function (v) {
        return f(v);
    };
};
var takeWhile = function (f) {
    var $17 = liftS(Data_String_CodeUnits.takeWhile(f));
    return function ($18) {
        return Data_String_NonEmpty_Internal.fromString($17($18));
    };
};
var lastIndexOf$prime = function (pat) {
    var $19 = Data_String_CodeUnits["lastIndexOf$prime"](pat);
    return function ($20) {
        return liftS($19($20));
    };
};
var lastIndexOf = function ($21) {
    return liftS(Data_String_CodeUnits.lastIndexOf($21));
};
var indexOf$prime = function (pat) {
    var $22 = Data_String_CodeUnits["indexOf$prime"](pat);
    return function ($23) {
        return liftS($22($23));
    };
};
var indexOf = function ($24) {
    return liftS(Data_String_CodeUnits.indexOf($24));
};
var fromNonEmptyString = function (v) {
    return v;
};
var length = function ($25) {
    return Data_String_CodeUnits.length(fromNonEmptyString($25));
};
var splitAt = function (i) {
    return function (nes) {
        var v = Data_String_CodeUnits.splitAt(i)(fromNonEmptyString(nes));
        return {
            before: Data_String_NonEmpty_Internal.fromString(v.before),
            after: Data_String_NonEmpty_Internal.fromString(v.after)
        };
    };
};
var take = function (i) {
    return function (nes) {
        var s = fromNonEmptyString(nes);
        var $11 = i < 1;
        if ($11) {
            return Data_Maybe.Nothing.value;
        };
        return new Data_Maybe.Just(toNonEmptyString(Data_String_CodeUnits.take(i)(s)));
    };
};
var takeRight = function (i) {
    return function (nes) {
        var s = fromNonEmptyString(nes);
        var $12 = i < 1;
        if ($12) {
            return Data_Maybe.Nothing.value;
        };
        return new Data_Maybe.Just(toNonEmptyString(Data_String_CodeUnits.takeRight(i)(s)));
    };
};
var toChar = function ($26) {
    return Data_String_CodeUnits.toChar(fromNonEmptyString($26));
};
var toCharArray = function ($27) {
    return Data_String_CodeUnits.toCharArray(fromNonEmptyString($27));
};
var toNonEmptyCharArray = /* #__PURE__ */ (function () {
    var $28 = Data_Maybe.fromJust();
    return function ($29) {
        return $28(Data_Array_NonEmpty.fromArray(toCharArray($29)));
    };
})();
var uncons = function (nes) {
    var s = fromNonEmptyString(nes);
    return {
        head: Data_String_Unsafe.charAt(0)(s),
        tail: Data_String_NonEmpty_Internal.fromString(Data_String_CodeUnits.drop(1)(s))
    };
};
var fromFoldable1 = function (dictFoldable1) {
    var $30 = Data_Semigroup_Foldable.fold1(dictFoldable1)(Data_String_NonEmpty_Internal.semigroupNonEmptyString);
    return function ($31) {
        return $30($31);
    };
};
var fromCharArray = function (v) {
    if (v.length === 0) {
        return Data_Maybe.Nothing.value;
    };
    return new Data_Maybe.Just(toNonEmptyString(Data_String_CodeUnits.fromCharArray(v)));
};
var fromNonEmptyCharArray = /* #__PURE__ */ (function () {
    var $32 = Data_Maybe.fromJust();
    return function ($33) {
        return $32(fromCharArray(Data_Array_NonEmpty.toArray($33)));
    };
})();
var dropWhile = function (f) {
    var $34 = liftS(Data_String_CodeUnits.dropWhile(f));
    return function ($35) {
        return Data_String_NonEmpty_Internal.fromString($34($35));
    };
};
var dropRight = function (i) {
    return function (nes) {
        var s = fromNonEmptyString(nes);
        var $14 = i >= Data_String_CodeUnits.length(s);
        if ($14) {
            return Data_Maybe.Nothing.value;
        };
        return new Data_Maybe.Just(toNonEmptyString(Data_String_CodeUnits.dropRight(i)(s)));
    };
};
var drop = function (i) {
    return function (nes) {
        var s = fromNonEmptyString(nes);
        var $15 = i >= Data_String_CodeUnits.length(s);
        if ($15) {
            return Data_Maybe.Nothing.value;
        };
        return new Data_Maybe.Just(toNonEmptyString(Data_String_CodeUnits.drop(i)(s)));
    };
};
var countPrefix = function ($36) {
    return liftS(Data_String_CodeUnits.countPrefix($36));
};
var cons = function (c) {
    return function (s) {
        return toNonEmptyString(Data_String_CodeUnits.singleton(c) + s);
    };
};
var charAt = function ($37) {
    return liftS(Data_String_CodeUnits.charAt($37));
};
export {
    fromCharArray,
    fromNonEmptyCharArray,
    singleton,
    cons,
    snoc,
    fromFoldable1,
    toCharArray,
    toNonEmptyCharArray,
    charAt,
    toChar,
    indexOf,
    indexOf$prime,
    lastIndexOf,
    lastIndexOf$prime,
    uncons,
    length,
    take,
    takeRight,
    takeWhile,
    drop,
    dropRight,
    dropWhile,
    countPrefix,
    splitAt
};
