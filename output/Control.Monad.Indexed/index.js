// Generated by purs version 0.15.2
import * as Control_Applicative_Indexed from "../Control.Applicative.Indexed/index.js";
import * as Control_Apply_Indexed from "../Control.Apply.Indexed/index.js";
import * as Control_Bind_Indexed from "../Control.Bind.Indexed/index.js";
import * as Data_Functor_Indexed from "../Data.Functor.Indexed/index.js";
var iwhenM = function (dictIxMonad) {
    return function (mb) {
        return function (m) {
            return Control_Bind_Indexed.ibind(dictIxMonad.IxBind1())(mb)(function (b) {
                return Control_Applicative_Indexed.iwhen(dictIxMonad.IxApplicative0())(b)(m);
            });
        };
    };
};
var iunlessM = function (dictIxMonad) {
    return function (mb) {
        return function (m) {
            return Control_Bind_Indexed.ibind(dictIxMonad.IxBind1())(mb)(function (b) {
                return Control_Applicative_Indexed.iunless(dictIxMonad.IxApplicative0())(b)(m);
            });
        };
    };
};
var iap = function (dictIxMonad) {
    return function (f) {
        return function (a) {
            return Control_Bind_Indexed.ibind(dictIxMonad.IxBind1())(f)(function (f$prime) {
                return Control_Bind_Indexed.ibind(dictIxMonad.IxBind1())(a)(function (a$prime) {
                    return Control_Applicative_Indexed.ipure(dictIxMonad.IxApplicative0())(f$prime(a$prime));
                });
            });
        };
    };
};
export {
    iap,
    iwhenM,
    iunlessM
};
export {
    ipure,
    iunless,
    iwhen
} from "../Control.Applicative.Indexed/index.js";
export {
    iapply,
    iapplyFirst,
    iapplySecond
} from "../Control.Apply.Indexed/index.js";
export {
    composeiKleisli,
    composeiKleisliFlipped,
    ibind,
    ibindFlipped
} from "../Control.Bind.Indexed/index.js";
export {
    imap,
    ivoid,
    ivoidLeft,
    ivoidRight
} from "../Data.Functor.Indexed/index.js";
