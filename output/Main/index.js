// Generated by purs version 0.15.2
import * as $foreign from "./foreign.js";
import * as Contrib_Web_HTML_Window_Selection from "../Contrib.Web.HTML.Window.Selection/index.js";
import * as Control_Applicative from "../Control.Applicative/index.js";
import * as Control_Bind from "../Control.Bind/index.js";
import * as Control_Category from "../Control.Category/index.js";
import * as Control_Monad_Except from "../Control.Monad.Except/index.js";
import * as Control_Monad_Maybe_Trans from "../Control.Monad.Maybe.Trans/index.js";
import * as Control_Monad_State from "../Control.Monad.State/index.js";
import * as Control_Monad_State_Class from "../Control.Monad.State.Class/index.js";
import * as Control_Monad_State_Trans from "../Control.Monad.State.Trans/index.js";
import * as Control_Semigroupoid from "../Control.Semigroupoid/index.js";
import * as Data_Array from "../Data.Array/index.js";
import * as Data_Array_Builder from "../Data.Array.Builder/index.js";
import * as Data_Array_NonEmpty from "../Data.Array.NonEmpty/index.js";
import * as Data_Either from "../Data.Either/index.js";
import * as Data_Eq from "../Data.Eq/index.js";
import * as Data_Foldable from "../Data.Foldable/index.js";
import * as Data_FoldableWithIndex from "../Data.FoldableWithIndex/index.js";
import * as Data_Function from "../Data.Function/index.js";
import * as Data_Function_Uncurried from "../Data.Function.Uncurried/index.js";
import * as Data_Functor from "../Data.Functor/index.js";
import * as Data_Identity from "../Data.Identity/index.js";
import * as Data_List_Types from "../Data.List.Types/index.js";
import * as Data_Map_Internal from "../Data.Map.Internal/index.js";
import * as Data_Maybe from "../Data.Maybe/index.js";
import * as Data_Monoid from "../Data.Monoid/index.js";
import * as Data_Newtype from "../Data.Newtype/index.js";
import * as Data_Ord from "../Data.Ord/index.js";
import * as Data_Ordering from "../Data.Ordering/index.js";
import * as Data_Profunctor_Join from "../Data.Profunctor.Join/index.js";
import * as Data_Semigroup from "../Data.Semigroup/index.js";
import * as Data_Semiring from "../Data.Semiring/index.js";
import * as Data_Set from "../Data.Set/index.js";
import * as Data_Show from "../Data.Show/index.js";
import * as Data_String_Common from "../Data.String.Common/index.js";
import * as Data_String_Regex from "../Data.String.Regex/index.js";
import * as Data_String_Regex_Flags from "../Data.String.Regex.Flags/index.js";
import * as Data_String_Regex_Unsafe from "../Data.String.Regex.Unsafe/index.js";
import * as Data_Traversable from "../Data.Traversable/index.js";
import * as Data_Tuple from "../Data.Tuple/index.js";
import * as Data_Unfoldable from "../Data.Unfoldable/index.js";
import * as Data_Unit from "../Data.Unit/index.js";
import * as Debug from "../Debug/index.js";
import * as Effect from "../Effect/index.js";
import * as Effect_Aff from "../Effect.Aff/index.js";
import * as Effect_Class from "../Effect.Class/index.js";
import * as Effect_Exception from "../Effect.Exception/index.js";
import * as Effect_Ref from "../Effect.Ref/index.js";
import * as Foreign from "../Foreign/index.js";
import * as Foreign_Object from "../Foreign.Object/index.js";
import * as MPP from "../MPP/index.js";
import * as React_Basic from "../React.Basic/index.js";
import * as React_Basic_DOM from "../React.Basic.DOM/index.js";
import * as React_Basic_DOM_Events from "../React.Basic.DOM.Events/index.js";
import * as React_Basic_DOM_Generated from "../React.Basic.DOM.Generated/index.js";
import * as React_Basic_DOM_Internal from "../React.Basic.DOM.Internal/index.js";
import * as React_Basic_Events from "../React.Basic.Events/index.js";
import * as React_Basic_Hooks from "../React.Basic.Hooks/index.js";
import * as React_Basic_Hooks_Internal from "../React.Basic.Hooks.Internal/index.js";
import * as Text_CSV from "../Text.CSV/index.js";
import * as Type_Equality from "../Type.Equality/index.js";
import * as Web_Event_EventTarget from "../Web.Event.EventTarget/index.js";
import * as Web_File_File from "../Web.File.File/index.js";
import * as Web_File_FileList from "../Web.File.FileList/index.js";
import * as Web_File_FileReader from "../Web.File.FileReader/index.js";
import * as Web_HTML from "../Web.HTML/index.js";
import * as Web_HTML_HTMLDocument from "../Web.HTML.HTMLDocument/index.js";
import * as Web_HTML_HTMLElement from "../Web.HTML.HTMLElement/index.js";
import * as Web_HTML_Window from "../Web.HTML.Window/index.js";
var Phrases = function (x) {
    return x;
};
var Ignored = function (x) {
    return x;
};
var Header = function (x) {
    return x;
};
var ColumnCellId = function (x) {
    return x;
};
var Interesting = function (x) {
    return x;
};
var WordIndex = function (x) {
    return x;
};
var ColumnCell = function (x) {
    return x;
};
var ColumnState = function (x) {
    return x;
};
var semigroupPhrases = /* #__PURE__ */ Data_Set.semigroupSet(Data_Ord.ordString);
var semigroupIgnored = Data_Semigroup.semigroupArray;
var newtypeWordIndex_ = {
    Coercible0: function () {
        return undefined;
    }
};
var newtypePhrases_ = {
    Coercible0: function () {
        return undefined;
    }
};
var newtypeInteresting_ = {
    Coercible0: function () {
        return undefined;
    }
};
var newtypeIgnored_ = {
    Coercible0: function () {
        return undefined;
    }
};
var newtypeHeader_ = {
    Coercible0: function () {
        return undefined;
    }
};
var newtypeColumnCell_ = {
    Coercible0: function () {
        return undefined;
    }
};
var newtypeColumnCellId_ = {
    Coercible0: function () {
        return undefined;
    }
};
var monoidPhrases = /* #__PURE__ */ Data_Set.monoidSet(Data_Ord.ordString);
var monoidIgnored = Data_Monoid.monoidArray;
var eqPhrases = {
    eq: function (x) {
        return function (y) {
            return Data_Eq.eq(Data_Set.eqSet(Data_Eq.eqString))(x)(y);
        };
    }
};
var eqHeader = {
    eq: function (x) {
        return function (y) {
            return x === y;
        };
    }
};
var ordHeader = {
    compare: function (x) {
        return function (y) {
            return Data_Ord.compare(Data_Ord.ordString)(x)(y);
        };
    },
    Eq0: function () {
        return eqHeader;
    }
};
var eqColumnCellId = {
    eq: function (x) {
        return function (y) {
            return x === y;
        };
    }
};
var ordColumnCellId = {
    compare: function (x) {
        return function (y) {
            return Data_Ord.compare(Data_Ord.ordInt)(x)(y);
        };
    },
    Eq0: function () {
        return eqColumnCellId;
    }
};
var monoidInteresting = /* #__PURE__ */ Data_Maybe.monoidMaybe(/* #__PURE__ */ Data_Semigroup.semigroupRecord()(/* #__PURE__ */ Data_Semigroup.semigroupRecordCons({
    reflectSymbol: function () {
        return "index";
    }
})()(/* #__PURE__ */ Data_Semigroup.semigroupRecordCons({
    reflectSymbol: function () {
        return "words";
    }
})()(Data_Semigroup.semigroupRecordNil)(/* #__PURE__ */ Data_Map_Internal.semigroupMap()(Data_Ord.ordString)(/* #__PURE__ */ Data_Set.semigroupSet(ordColumnCellId))))(/* #__PURE__ */ Data_Set.semigroupSet(ordColumnCellId))));
var monoidWordIndex = /* #__PURE__ */ Data_Map_Internal.monoidSemigroupMap()(Data_Ord.ordString)(/* #__PURE__ */ Data_Set.semigroupSet(ordColumnCellId));
var semigroupInteresting = /* #__PURE__ */ Data_Maybe.semigroupMaybe(/* #__PURE__ */ Data_Semigroup.semigroupRecord()(/* #__PURE__ */ Data_Semigroup.semigroupRecordCons({
    reflectSymbol: function () {
        return "index";
    }
})()(/* #__PURE__ */ Data_Semigroup.semigroupRecordCons({
    reflectSymbol: function () {
        return "words";
    }
})()(Data_Semigroup.semigroupRecordNil)(/* #__PURE__ */ Data_Map_Internal.semigroupMap()(Data_Ord.ordString)(/* #__PURE__ */ Data_Set.semigroupSet(ordColumnCellId))))(/* #__PURE__ */ Data_Set.semigroupSet(ordColumnCellId))));
var semigroupWordIndex = /* #__PURE__ */ Data_Map_Internal.semigroupMap()(Data_Ord.ordString)(/* #__PURE__ */ Data_Set.semigroupSet(ordColumnCellId));
var eqColumnCell = {
    eq: function (x) {
        return function (y) {
            return x.content === y.content && Data_Eq.eq(eqColumnCellId)(x.id)(y.id);
        };
    }
};
var ordColumnCell = {
    compare: function (x) {
        return function (y) {
            var v = Data_Ord.compare(Data_Ord.ordString)(x.content)(y.content);
            if (v instanceof Data_Ordering.LT) {
                return Data_Ordering.LT.value;
            };
            if (v instanceof Data_Ordering.GT) {
                return Data_Ordering.GT.value;
            };
            return Data_Ord.compare(ordColumnCellId)(x.id)(y.id);
        };
    },
    Eq0: function () {
        return eqColumnCell;
    }
};
var wordsRegex = /* #__PURE__ */ Data_String_Regex_Unsafe.unsafeRegex("\\w+")(Data_String_Regex_Flags.global);
var wordInInteresting = function (word) {
    return function (v) {
        if (v instanceof Data_Maybe.Nothing) {
            return false;
        };
        if (v instanceof Data_Maybe.Just) {
            return Data_Maybe.isJust(Data_Map_Internal.lookup(Data_Ord.ordString)(word)(v.value0.words));
        };
        throw new Error("Failed pattern match at Main (line 94, column 1 - line 94, column 54): " + [ word.constructor.name, v.constructor.name ]);
    };
};
var statsTable = function (v) {
    return function (actions) {
        var stats$prime = Data_Array.reverse(Data_Array.sortWith(Data_Ord.ordInt)((function () {
            var $260 = Data_Foldable.length(Data_Set.foldableSet)(Data_Semiring.semiringInt);
            return function ($261) {
                return $260(Data_Tuple.snd($261));
            };
        })())(Data_Array_Builder.unsafeBuild(Data_FoldableWithIndex.foldMapWithIndex(Data_Map_Internal.foldableWithIndexMap)(Data_Array_Builder.monoidBuilder)(Data_Tuple.curry(Data_Array_Builder.cons))(v.wordStats))));
        var overlaps = Data_Maybe.fromMaybe(Data_Function["const"](true))(Control_Bind.bind(Data_Maybe.bindMaybe)(v.interesting)(function (i$prime) {
            return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(function (wi) {
                return !Data_Foldable["null"](Data_Set.foldableSet)(Data_Set.intersection(ordColumnCellId)(i$prime.index)(wi));
            });
        }));
        return React_Basic_DOM_Generated.table()((function (v1) {
            return {
                children: v1,
                className: "table"
            };
        })([ React_Basic_DOM_Generated.thead_(Data_Array.singleton(React_Basic_DOM_Generated.tr_([ React_Basic_DOM_Generated.th_([ React_Basic_DOM.text("show in context") ]), React_Basic_DOM_Generated.th_([ React_Basic_DOM.text("phrase") ]), React_Basic_DOM_Generated.th_([ React_Basic_DOM.text("count") ]), React_Basic_DOM_Generated.th_([  ]) ]))), React_Basic_DOM_Generated.tbody_(Data_Functor.map(Data_Functor.functorArray)(function (v1) {
            var $148 = Data_Array.elem(Data_Eq.eqString)(v1.value0)(v.ignored) || !overlaps(v1.value1);
            if ($148) {
                return Data_Monoid.mempty(React_Basic.monoidJSX);
            };
            return React_Basic_DOM_Generated.tr_([ React_Basic_DOM_Generated.td_(Data_Array.singleton(React_Basic_DOM_Generated.input()((function () {
                var isInteresting = wordInInteresting(v1.value0)(v.interesting);
                var onChange = React_Basic_Events.handler(React_Basic_DOM_Events.targetValue)(function (v2) {
                    if (isInteresting) {
                        return actions.removeFromInteresting(v1.value0);
                    };
                    return actions.addToInteresting(v1.value0)(v1.value1);
                });
                return {
                    onChange: onChange,
                    type: "checkbox",
                    className: "form-check-input rounded-0",
                    checked: isInteresting,
                    id: "show-body"
                };
            })()))), React_Basic_DOM_Generated.td_([ React_Basic_DOM.text(v1.value0) ]), React_Basic_DOM_Generated.td_([ React_Basic_DOM.text(Data_Show.show(Data_Show.showInt)(Data_Foldable.length(Data_Set.foldableSet)(Data_Semiring.semiringInt)(v1.value1))) ]), React_Basic_DOM_Generated.td_(Data_Array.singleton((function () {
                var $150 = Data_Set.member(Data_Ord.ordString)(Data_String_Common.toLower(v1.value0))(v.phrases);
                if ($150) {
                    var onClick = React_Basic_Events.handler(Control_Semigroupoid.composeFlipped(React_Basic_Events.semigroupoidBuilder)(React_Basic_DOM_Events.preventDefault)(React_Basic_DOM_Events.targetValue))(function (value) {
                        return actions.removeFromPhrases(v1.value0);
                    });
                    return React_Basic_DOM_Generated.button()({
                        type: "button",
                        className: "btn-close btn-small",
                        onClick: onClick,
                        children: [  ]
                    });
                };
                return Data_Monoid.mempty(React_Basic.monoidJSX);
            })())) ]);
        })(stats$prime)) ]));
    };
};
var removeFromInteresting = function (word) {
    return function (v) {
        return Control_Bind.bind(Data_Maybe.bindMaybe)(v)(function (v1) {
            return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Map_Internal.pop(Data_Ord.ordString)(word)(v1.words))(function (v2) {
                return Control_Bind.bind(Data_Maybe.bindMaybe)((function () {
                    var $262 = Data_Functor.map(Data_Functor.functorArray)(Data_Tuple.snd);
                    return function ($263) {
                        return Data_Array.uncons($262($263));
                    };
                })()(Data_Map_Internal.toUnfoldable(Data_Unfoldable.unfoldableArray)(v2.value1)))(function (v3) {
                    return Control_Applicative.pure(Data_Maybe.applicativeMaybe)({
                        words: v2.value1,
                        index: Data_Foldable.foldl(Data_Foldable.foldableArray)(Data_Set.intersection(ordColumnCellId))(v3.head)(v3.tail)
                    });
                });
            });
        });
    };
};
var matchAll = /* #__PURE__ */ Data_Function_Uncurried.runFn2($foreign.matchAllImpl);
var inTheIndex = function (v) {
    return function (v1) {
        if (v1 instanceof Data_Maybe.Nothing) {
            return true;
        };
        if (v1 instanceof Data_Maybe.Just) {
            return Data_Set.member(ordColumnCellId)(v)(v1.value0.index);
        };
        throw new Error("Failed pattern match at Main (line 98, column 1 - line 98, column 53): " + [ v.constructor.name, v1.constructor.name ]);
    };
};
var hoistMaybe = function (dictMonad) {
    var $264 = Control_Applicative.pure(dictMonad.Applicative0());
    return function ($265) {
        return Control_Monad_Maybe_Trans.MaybeT($264($265));
    };
};
var fromWordIndex = function (wordStats) {
    return function (cells) {
        return {
            cells: cells,
            ignored: [  ],
            isClosedQuestion: false,
            phrases: Data_Monoid.mempty(Data_Set.monoidSet(Data_Ord.ordString)),
            wordStats: wordStats,
            interesting: Data_Monoid.mempty(monoidInteresting)
        };
    };
};
var countStats = function (cells) {
    return function (v) {
        var match = function (content) {
            var v1 = Data_Functor.map(Data_Functor.functorArray)($foreign.escapeRegExp)(Data_Array.fromFoldable(Data_Set.foldableSet)(v));
            if (v1.length === 0) {
                var extractResult = (function () {
                    var $266 = Data_Functor.map(Data_Functor.functorArray)(Data_String_Common.toLower);
                    return function ($267) {
                        return $266(Data_Array.catMaybes(Data_Array_NonEmpty.toArray($267)));
                    };
                })();
                return Data_Maybe.maybe([  ])(extractResult)(Data_String_Regex.match(wordsRegex)(content));
            };
            var pattern = "(?:[^0-9a-za-z]|^)(?<phrase>" + (Data_Array.intercalate(Data_Monoid.monoidString)("|")(v1) + "|\\w+)(?:[^a-za-z0-9]|$)");
            var regex = Data_String_Regex_Unsafe.unsafeRegex(pattern)(Data_Semigroup.append(Data_String_Regex_Flags.semigroupRegexFlags)(Data_String_Regex_Flags.global)(Data_String_Regex_Flags.ignoreCase));
            return Data_Array.catMaybes(Data_Functor.map(Data_Functor.functorArray)(Foreign_Object.lookup("phrase"))(matchAll(regex)(content)));
        };
        var stats = Data_Function.flip(Data_Array.foldMap(Data_Map_Internal.monoidSemigroupMap()(Data_Ord.ordString)(Data_Set.semigroupSet(ordColumnCellId))))(cells)(function (v1) {
            var words$prime = match(v1.content);
            return Data_Function.flip(Data_Array.foldMap(Data_Map_Internal.monoidSemigroupMap()(Data_Ord.ordString)(Data_Set.semigroupSet(ordColumnCellId))))(words$prime)(function (word) {
                return Data_Map_Internal.singleton(word)(Data_Set.singleton(v1.id));
            });
        });
        return stats;
    };
};
var setPhrases = function (phrases) {
    return function (v) {
        var $179 = Data_Eq.notEq(eqPhrases)(phrases)(v.phrases);
        if ($179) {
            var stats = countStats(v.cells)(phrases);
            return {
                ignored: v.ignored,
                cells: v.cells,
                isClosedQuestion: v.isClosedQuestion,
                wordStats: stats,
                phrases: phrases,
                interesting: Data_Monoid.mempty(monoidInteresting)
            };
        };
        return v;
    };
};
var removePhrase = function (str) {
    return function (v) {
        var phrases = Data_Newtype.over()()(Phrases)(Data_Set["delete"](Data_Ord.ordString)(Data_String_Common.toLower(str)))(v.phrases);
        var v1 = setPhrases(phrases)(v);
        return {
            ignored: v1.ignored,
            cells: v1.cells,
            isClosedQuestion: false,
            wordStats: v1.wordStats,
            phrases: v1.phrases,
            interesting: v1.interesting
        };
    };
};
var setClosedQuestion = function (setClosed) {
    return function (v) {
        var $185 = v.isClosedQuestion === setClosed;
        if ($185) {
            return v;
        };
        var phrases = (function () {
            if (setClosed) {
                return Phrases(Data_Set.fromFoldable(Data_Foldable.foldableArray)(Data_Ord.ordString)(Data_Functor.map(Data_Functor.functorArray)((function () {
                    var $268 = Data_Newtype.un()(ColumnCell);
                    return function ($269) {
                        return Data_String_Common.toLower((function (v1) {
                            return v1.content;
                        })($268($269)));
                    };
                })())(v.cells)));
            };
            return Data_Monoid.mempty(monoidPhrases);
        })();
        var v1 = setPhrases(phrases)(v);
        return {
            ignored: v1.ignored,
            cells: v1.cells,
            isClosedQuestion: setClosed,
            wordStats: v1.wordStats,
            phrases: v1.phrases,
            interesting: v1.interesting
        };
    };
};
var addToInteresting = function (newWord) {
    return function (newIndex) {
        return function (v) {
            if (v instanceof Data_Maybe.Nothing) {
                return new Data_Maybe.Just({
                    index: newIndex,
                    words: Data_Map_Internal.singleton(newWord)(newIndex)
                });
            };
            if (v instanceof Data_Maybe.Just) {
                return new Data_Maybe.Just({
                    words: Data_Map_Internal.insert(Data_Ord.ordString)(newWord)(newIndex)(v.value0.words),
                    index: Data_Set.intersection(ordColumnCellId)(v.value0.index)(newIndex)
                });
            };
            throw new Error("Failed pattern match at Main (line 85, column 1 - line 85, column 66): " + [ newWord.constructor.name, newIndex.constructor.name, v.constructor.name ]);
        };
    };
};
var addPhrase = function (str) {
    return function (v) {
        var phrases = Data_Newtype.over()()(Phrases)(Data_Set.insert(Data_Ord.ordString)(Data_String_Common.toLower(str)))(v.phrases);
        return setPhrases(phrases)(v);
    };
};
var mkSheetIndexerComponent = /* #__PURE__ */ React_Basic_Hooks.component("HelloComponent")(function (v) {
    var toColumnCell = function (id) {
        return function (content) {
            return {
                id: id,
                content: content
            };
        };
    };
    return React_Basic_Hooks_Internal.bind(React_Basic_Hooks_Internal.ixBindRender)(React_Basic_Hooks.useMemo(Data_Eq.eqString)(v.csvFile)(function (v1) {
        return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Either.hush(Text_CSV.parse(v.csvFile)))(function (rows) {
            return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Array.uncons(rows))(function (v2) {
                var headers = Data_Functor.map(Data_Functor.functorArray)(Header)(v2.head);
                var exec = (function () {
                    var $270 = Data_Function.flip(Control_Monad_State.execState)(Data_Map_Internal.fromFoldable(ordHeader)(Data_Foldable.foldableArray)(Data_Functor.map(Data_Functor.functorArray)((function () {
                        var $272 = Data_Function.flip(Data_Tuple.Tuple.create)([  ]);
                        return function ($273) {
                            return $272(Header($273));
                        };
                    })())(v2.head)));
                    return function ($271) {
                        return $270(Control_Monad_Maybe_Trans.runMaybeT($271));
                    };
                })();
                var columns = exec(Data_FoldableWithIndex.forWithIndex_(Control_Monad_Maybe_Trans.applicativeMaybeT(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity)))(Data_FoldableWithIndex.foldableWithIndexArray)(headers)(function (columnIdx) {
                    return function (header) {
                        return Data_FoldableWithIndex.forWithIndex_(Control_Monad_Maybe_Trans.applicativeMaybeT(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity)))(Data_FoldableWithIndex.foldableWithIndexArray)(v2.tail)(function (rowIdx) {
                            return function (row) {
                                return Control_Bind.bind(Control_Monad_Maybe_Trans.bindMaybeT(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity)))(Control_Monad_State_Class.gets(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity))(Data_Map_Internal.lookup(ordHeader)(header)))(function (column) {
                                    return Control_Bind.bind(Control_Monad_Maybe_Trans.bindMaybeT(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity)))(hoistMaybe(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(Data_Array.index(row)(columnIdx)))(function (cell) {
                                        return Control_Monad_State_Class.modify_(Control_Monad_Maybe_Trans.monadStateMaybeT(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity)))(Data_Map_Internal.insert(ordHeader)(header)(Data_Semigroup.append(Data_Semigroup.semigroupArray)(column)([ toColumnCell(rowIdx)(cell) ])));
                                    });
                                });
                            };
                        });
                    };
                }));
                return Control_Applicative.pure(Data_Maybe.applicativeMaybe)({
                    headers: headers,
                    columns: columns
                });
            });
        });
    }))(function (csv) {
        return React_Basic_Hooks_Internal.bind(React_Basic_Hooks_Internal.ixBindRender)(React_Basic_Hooks.useState(Data_Maybe.Nothing.value))(function (v1) {
            return React_Basic_Hooks_Internal.bind(React_Basic_Hooks_Internal.ixBindRender)(React_Basic_Hooks.useState(Data_Map_Internal.empty))(function (v2) {
                return React_Basic_Hooks_Internal.discard(React_Basic_Hooks_Internal.ixBindRender)(React_Basic_Hooks.useEffect(Data_Eq.eqArray(Data_Eq.eqString))([ v.csvFile ])(function __do() {
                    v1.value1(Data_Function["const"](Data_Maybe.Nothing.value))();
                    v2.value1(Data_Function["const"](Data_Map_Internal.empty))();
                    return Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
                }))(function () {
                    var setClosedQuestion$prime = function (header) {
                        return function (flag) {
                            return v2.value1(Data_Function.flip(Data_Map_Internal.alter(ordHeader))(header)(function (v3) {
                                if (v3 instanceof Data_Maybe.Nothing) {
                                    return Data_Maybe.Nothing.value;
                                };
                                if (v3 instanceof Data_Maybe.Just) {
                                    return new Data_Maybe.Just(setClosedQuestion(flag)(v3.value0));
                                };
                                throw new Error("Failed pattern match at Main (line 340, column 83 - line 342, column 50): " + [ v3.constructor.name ]);
                            }));
                        };
                    };
                    var removeFromPhrases = function (header) {
                        return function (str) {
                            return v2.value1(Data_Function.flip(Data_Map_Internal.alter(ordHeader))(header)(function (v3) {
                                if (v3 instanceof Data_Maybe.Nothing) {
                                    return Data_Maybe.Nothing.value;
                                };
                                if (v3 instanceof Data_Maybe.Just) {
                                    return new Data_Maybe.Just(removePhrase(str)(v3.value0));
                                };
                                throw new Error("Failed pattern match at Main (line 332, column 81 - line 334, column 44): " + [ v3.constructor.name ]);
                            }));
                        };
                    };
                    var removeFromInteresting$prime = function (header) {
                        return function (word) {
                            return v2.value1(Data_Function.flip(Data_Map_Internal.alter(ordHeader))(header)(function (v3) {
                                if (v3 instanceof Data_Maybe.Nothing) {
                                    return Data_Maybe.Nothing.value;
                                };
                                if (v3 instanceof Data_Maybe.Just) {
                                    return new Data_Maybe.Just({
                                        ignored: v3.value0.ignored,
                                        cells: v3.value0.cells,
                                        isClosedQuestion: v3.value0.isClosedQuestion,
                                        wordStats: v3.value0.wordStats,
                                        phrases: v3.value0.phrases,
                                        interesting: removeFromInteresting(word)(v3.value0.interesting)
                                    });
                                };
                                throw new Error("Failed pattern match at Main (line 324, column 87 - line 326, column 114): " + [ v3.constructor.name ]);
                            }));
                        };
                    };
                    var computeStats = function (header) {
                        return v2.value1(Data_Function.flip(Data_Map_Internal.alter(ordHeader))(header)(function (v3) {
                            if (v3 instanceof Data_Maybe.Nothing) {
                                return Control_Bind.bind(Data_Maybe.bindMaybe)(csv)(function (v4) {
                                    return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Map_Internal.lookup(ordHeader)(header)(v4.columns))(function (column) {
                                        var stats = countStats(column)(Data_Monoid.mempty(monoidPhrases));
                                        return new Data_Maybe.Just(fromWordIndex(stats)(column));
                                    });
                                });
                            };
                            if (v3 instanceof Data_Maybe.Just) {
                                return new Data_Maybe.Just(v3.value0);
                            };
                            throw new Error("Failed pattern match at Main (line 307, column 72 - line 314, column 25): " + [ v3.constructor.name ]);
                        }));
                    };
                    var addToPhrases = function (header) {
                        return function (str) {
                            return v2.value1(Data_Function.flip(Data_Map_Internal.alter(ordHeader))(header)(function (v3) {
                                if (v3 instanceof Data_Maybe.Nothing) {
                                    return Data_Maybe.Nothing.value;
                                };
                                if (v3 instanceof Data_Maybe.Just) {
                                    return new Data_Maybe.Just(addPhrase(str)(v3.value0));
                                };
                                throw new Error("Failed pattern match at Main (line 328, column 76 - line 330, column 41): " + [ v3.constructor.name ]);
                            }));
                        };
                    };
                    var addToInteresting$prime = function (header) {
                        return function (word) {
                            return function (index) {
                                return v2.value1(Data_Function.flip(Data_Map_Internal.alter(ordHeader))(header)(function (v3) {
                                    if (v3 instanceof Data_Maybe.Nothing) {
                                        return Data_Maybe.Nothing.value;
                                    };
                                    if (v3 instanceof Data_Maybe.Just) {
                                        return new Data_Maybe.Just({
                                            ignored: v3.value0.ignored,
                                            cells: v3.value0.cells,
                                            isClosedQuestion: v3.value0.isClosedQuestion,
                                            wordStats: v3.value0.wordStats,
                                            phrases: v3.value0.phrases,
                                            interesting: addToInteresting(word)(index)(v3.value0.interesting)
                                        });
                                    };
                                    throw new Error("Failed pattern match at Main (line 320, column 88 - line 322, column 115): " + [ v3.constructor.name ]);
                                }));
                            };
                        };
                    };
                    var addToIgnored = function (header) {
                        return function (word) {
                            return v2.value1(Data_Function.flip(Data_Map_Internal.alter(ordHeader))(header)(function (v3) {
                                if (v3 instanceof Data_Maybe.Nothing) {
                                    return Data_Maybe.Nothing.value;
                                };
                                if (v3 instanceof Data_Maybe.Just) {
                                    return new Data_Maybe.Just({
                                        ignored: Data_Newtype.over()()(Ignored)(Data_Array.cons(word))(v3.value0.ignored),
                                        cells: v3.value0.cells,
                                        isClosedQuestion: v3.value0.isClosedQuestion,
                                        wordStats: v3.value0.wordStats,
                                        phrases: v3.value0.phrases,
                                        interesting: v3.value0.interesting
                                    });
                                };
                                throw new Error("Failed pattern match at Main (line 316, column 77 - line 318, column 118): " + [ v3.constructor.name ]);
                            }));
                        };
                    };
                    return Control_Applicative.pure(React_Basic_Hooks_Internal.applicativeRender(Type_Equality.refl))(React_Basic_DOM_Generated.div()((function (v3) {
                        return {
                            children: v3,
                            className: "container"
                        };
                    })((function () {
                        if (csv instanceof Data_Maybe.Just) {
                            return [ React_Basic_DOM_Generated.ul()((function (v3) {
                                return {
                                    className: "list-group flex-wrap list-group-horizontal",
                                    children: v3
                                };
                            })(Data_Functor.mapFlipped(Data_Functor.functorArray)(csv.value0.headers)(function (header) {
                                var headerStr = Data_Newtype.un()(Header)(header);
                                var inputId = "input-" + headerStr;
                                var active = Data_Eq.eq(Data_Maybe.eqMaybe(eqHeader))(new Data_Maybe.Just(header))(v1.value0);
                                var onChange = React_Basic_Events.handler(React_Basic_DOM_Events.targetValue)(function (v3) {
                                    return function __do() {
                                        v1.value1(Data_Function["const"]((function () {
                                            if (active) {
                                                return Data_Maybe.Nothing.value;
                                            };
                                            return new Data_Maybe.Just(header);
                                        })()))();
                                        var v4 = Data_Map_Internal.lookup(ordHeader)(header)(v2.value0);
                                        if (v4 instanceof Data_Maybe.Nothing) {
                                            return Effect_Aff.launchAff_(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(computeStats(header)))();
                                        };
                                        if (v4 instanceof Data_Maybe.Just) {
                                            return Data_Unit.unit;
                                        };
                                        throw new Error("Failed pattern match at Main (line 356, column 17 - line 360, column 38): " + [ v4.constructor.name ]);
                                    };
                                });
                                return React_Basic_DOM_Generated.li()((function (v3) {
                                    return {
                                        children: v3,
                                        className: "border-1 list-group-item flex-fill m-1" + Data_Monoid.guard(Data_Monoid.monoidString)(active)(" active"),
                                        "_aria": Foreign_Object.fromHomogeneous()({
                                            current: Data_Show.show(Data_Show.showBoolean)(active)
                                        })
                                    };
                                })([ React_Basic_DOM_Generated.input()({
                                    className: "rounded-0 form-check-input me-2",
                                    type: "checkbox",
                                    value: "",
                                    id: inputId,
                                    onChange: onChange,
                                    checked: active
                                }), React_Basic_DOM_Generated.label()({
                                    htmlFor: inputId,
                                    children: [ React_Basic_DOM.text(Data_Newtype.un()(Header)(header)) ]
                                }) ]));
                            }))), React_Basic_DOM_Generated.div()((function (v3) {
                                return {
                                    className: "mt-5 container justify-content-betweeen",
                                    children: v3
                                };
                            })(Data_Array.singleton(React_Basic_DOM_Generated.div()((function (v3) {
                                return {
                                    className: "row",
                                    children: v3
                                };
                            })(Control_Bind.join(Control_Bind.bindArray)(Data_Functor.mapFlipped(Data_Functor.functorArray)(Data_Array.fromFoldable(Data_Foldable.foldableMaybe)(v1.value0))(function (column) {
                                var columnStyle = React_Basic_DOM_Internal.css({
                                    maxHeight: "500px",
                                    overflowY: "scroll"
                                });
                                return [ React_Basic_DOM_Generated.div()((function (v3) {
                                    return {
                                        className: "col",
                                        style: columnStyle,
                                        children: v3
                                    };
                                })(Data_Array.singleton((function () {
                                    var v3 = Data_Map_Internal.lookup(ordHeader)(column)(v2.value0);
                                    if (v3 instanceof Data_Maybe.Nothing) {
                                        return React_Basic_DOM.text("Hmmmm... we should start recomputing in a moment...");
                                    };
                                    if (v3 instanceof Data_Maybe.Just) {
                                        return statsTable(v3.value0)({
                                            addToIgnored: addToIgnored(column),
                                            addToInteresting: addToInteresting$prime(column),
                                            removeFromInteresting: removeFromInteresting$prime(column),
                                            removeFromPhrases: removeFromPhrases(column)
                                        });
                                    };
                                    throw new Error("Failed pattern match at Main (line 371, column 21 - line 379, column 26): " + [ v3.constructor.name ]);
                                })()))), Data_Maybe.fromMaybe(Data_Monoid.mempty(React_Basic.monoidJSX))(Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Map_Internal.lookup(ordHeader)(column)(csv.value0.columns))(function (columnCells) {
                                    var step = (function () {
                                        var v3 = Data_Map_Internal.lookup(ordHeader)(column)(v2.value0);
                                        if (v3 instanceof Data_Maybe.Just) {
                                            return function (v4) {
                                                return inTheIndex(v4.id)(v3.value0.interesting);
                                            };
                                        };
                                        if (v3 instanceof Data_Maybe.Nothing) {
                                            return Data_Function["const"](true);
                                        };
                                        throw new Error("Failed pattern match at Main (line 383, column 30 - line 387, column 46): " + [ v3.constructor.name ]);
                                    })();
                                    var interestingWords = Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Map_Internal.lookup(ordHeader)(column)(v2.value0))(function (v3) {
                                        return Control_Bind.bind(Data_Maybe.bindMaybe)(v3.interesting)(function (v4) {
                                            return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(v4.words);
                                        });
                                    });
                                    var mark = Data_Maybe.fromMaybe(Control_Category.identity(Control_Category.categoryFn))(Data_Functor.mapFlipped(Data_Maybe.functorMaybe)(interestingWords)((function () {
                                        var $274 = Data_Array.fromFoldable(Data_List_Types.foldableList);
                                        return function ($275) {
                                            return (function (words) {
                                                var mkReplace = function (markRegex) {
                                                    return Data_String_Regex.replace(markRegex)("$1<b>$2</b>$3");
                                                };
                                                var mkRegex = function (pattern) {
                                                    return Data_String_Regex_Unsafe.unsafeRegex(pattern)(Data_Semigroup.append(Data_String_Regex_Flags.semigroupRegexFlags)(Data_String_Regex_Flags.global)(Data_String_Regex_Flags.ignoreCase));
                                                };
                                                var mkPattern = function (word) {
                                                    return "([^a-zA-Z]|^)(" + (word + ")([^a-zA-Z]|$)");
                                                };
                                                var replaces = Data_Functor.mapFlipped(Data_Functor.functorArray)(words)(function ($276) {
                                                    return Data_Profunctor_Join.Join(mkReplace(mkRegex(mkPattern($276))));
                                                });
                                                var v3 = Data_Foldable.fold(Data_Foldable.foldableArray)(Data_Profunctor_Join.monoidJoin(Control_Category.categoryFn))(replaces);
                                                return v3;
                                            })($274(Data_Map_Internal.keys($275)));
                                        };
                                    })()));
                                    var columnCells$prime = Data_Array.filter(step)(columnCells);
                                    var tableBodyRows = Data_Functor.mapFlipped(Data_Functor.functorArray)(columnCells$prime)(function (v3) {
                                        var onMouseUp = React_Basic_Events.handler(React_Basic_DOM_Events.targetValue)(function (v4) {
                                            return function __do() {
                                                var w = Web_HTML.window();
                                                return Control_Bind.bind(Effect.bindEffect)(Contrib_Web_HTML_Window_Selection.getSelection(w))((function () {
                                                    var $277 = Data_Functor.map(Data_Maybe.functorMaybe)(Contrib_Web_HTML_Window_Selection.toString);
                                                    return function ($278) {
                                                        return (function (v5) {
                                                            if (v5 instanceof Data_Maybe.Just) {
                                                                return function __do() {
                                                                    addToPhrases(column)(v5.value0)();
                                                                    return Debug.traceM()(Effect.monadEffect)(v5.value0)();
                                                                };
                                                            };
                                                            if (v5 instanceof Data_Maybe.Nothing) {
                                                                return Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
                                                            };
                                                            throw new Error("Failed pattern match at Main (line 412, column 86 - line 416, column 53): " + [ v5.constructor.name ]);
                                                        })($277($278));
                                                    };
                                                })())();
                                            };
                                        });
                                        return React_Basic_DOM_Generated.tr_([ React_Basic_DOM_Generated.td()({
                                            onMouseUp: onMouseUp,
                                            dangerouslySetInnerHTML: {
                                                "__html": mark(v3.content)
                                            }
                                        }) ]);
                                    });
                                    return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(React_Basic_DOM_Generated.div()((function (v3) {
                                        return {
                                            className: "col",
                                            style: columnStyle,
                                            children: v3
                                        };
                                    })(Data_Array.singleton(React_Basic_DOM_Generated.table()((function (v3) {
                                        return {
                                            className: "table",
                                            children: v3
                                        };
                                    })([ React_Basic_DOM_Generated.thead_(Data_Array.singleton(React_Basic_DOM_Generated.tr_(Data_Array.singleton(React_Basic_DOM_Generated.th_(Data_Array.singleton(React_Basic_DOM_Generated.div()((function (v3) {
                                        return {
                                            className: "row",
                                            children: v3
                                        };
                                    })([ React_Basic_DOM_Generated.div()((function (v3) {
                                        return {
                                            className: "col",
                                            children: v3
                                        };
                                    })((function () {
                                        var isClosedQuestion = Data_Maybe.fromMaybe(false)(Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Map_Internal.lookup(ordHeader)(column)(v2.value0))(function (v3) {
                                            return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(v3.isClosedQuestion);
                                        }));
                                        var onChange = React_Basic_Events.handler(React_Basic_DOM_Events.targetValue)(Data_Function["const"](setClosedQuestion$prime(column)(!isClosedQuestion)));
                                        return [ React_Basic_DOM_Generated.label()({
                                            htmlFor: "make-choices-id",
                                            className: "me-2",
                                            children: [ React_Basic_DOM.text("Closed question") ]
                                        }), React_Basic_DOM_Generated.input()({
                                            className: "rounded-0 form-check-input",
                                            type: "checkbox",
                                            value: "",
                                            id: "make-choices-id",
                                            onChange: onChange,
                                            checked: isClosedQuestion
                                        }) ];
                                    })())), React_Basic_DOM_Generated.div()((function (v3) {
                                        return {
                                            className: "col",
                                            children: v3
                                        };
                                    })([ React_Basic_DOM_Generated.label()({
                                        className: "me-2",
                                        children: [ React_Basic_DOM.text("Matching") ]
                                    }), React_Basic_DOM.text(Data_Show.show(Data_Show.showInt)(Data_Foldable.length(Data_Foldable.foldableArray)(Data_Semiring.semiringInt)(columnCells$prime))) ])) ])))))))), React_Basic_DOM_Generated.tbody_(tableBodyRows) ]))))));
                                })) ];
                            }))))))) ];
                        };
                        if (csv instanceof Data_Maybe.Nothing) {
                            return [ React_Basic_DOM.text("parsing error") ];
                        };
                        throw new Error("Failed pattern match at Main (line 345, column 62 - line 443, column 46): " + [ csv.constructor.name ]);
                    })())));
                });
            });
        });
    });
});
var mkAppComponent = function __do() {
    var sheetIndexerComponent = mkSheetIndexerComponent();
    return React_Basic_Hooks.component("App")(function (v) {
        return React_Basic_Hooks_Internal.bind(React_Basic_Hooks_Internal.ixBindRender)(React_Basic_Hooks.useState(v.exampleCSV))(function (v1) {
            var onChange = React_Basic_Events.handler(React_Basic_DOM_Events.targetFiles)(function ($279) {
                return (function (v2) {
                    if (v2 instanceof Data_Maybe.Just) {
                        return function __do() {
                            var ref = Effect_Ref["new"](Data_Maybe.Nothing.value)();
                            var reader = Web_File_FileReader.fileReader();
                            var readerEventTarget = Web_File_FileReader.toEventTarget(reader);
                            var listener = Web_Event_EventTarget.eventListener(function (v3) {
                                return function __do() {
                                    Data_Functor["void"](Effect.functorEffect)(Control_Bind.bind(Effect.bindEffect)(Effect_Ref.read(ref))(Data_Traversable.traverse(Data_Traversable.traversableMaybe)(Effect.applicativeEffect)(function (l) {
                                        return Web_Event_EventTarget.removeEventListener("load")(l)(false)(readerEventTarget);
                                    })))();
                                    return Control_Bind.bind(Effect.bindEffect)(Web_File_FileReader.result(reader))((function () {
                                        var $280 = Foreign.readString(Data_Identity.monadIdentity);
                                        return function ($281) {
                                            return (function (v4) {
                                                if (v4 instanceof Data_Either.Right) {
                                                    return v1.value1(Data_Function["const"](v4.value0));
                                                };
                                                if (v4 instanceof Data_Either.Left) {
                                                    return Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
                                                };
                                                throw new Error("Failed pattern match at Main (line 461, column 79 - line 463, column 34): " + [ v4.constructor.name ]);
                                            })(Control_Monad_Except.runExcept($280($281)));
                                        };
                                    })())();
                                };
                            })();
                            Web_Event_EventTarget.addEventListener("load")(listener)(false)(readerEventTarget)();
                            Effect_Ref.write(new Data_Maybe.Just(listener))(ref)();
                            return Web_File_FileReader.readAsText(Web_File_File.toBlob(v2.value0))(reader)();
                        };
                    };
                    if (v2 instanceof Data_Maybe.Nothing) {
                        return Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
                    };
                    throw new Error("Failed pattern match at Main (line 452, column 76 - line 468, column 29): " + [ v2.constructor.name ]);
                })((function (v2) {
                    return Control_Bind.bind(Data_Maybe.bindMaybe)(v2)(Web_File_FileList.item(0));
                })($279));
            });
            return Control_Applicative.pure(React_Basic_Hooks_Internal.applicativeRender(Type_Equality.refl))(React_Basic_DOM_Generated.div_([ React_Basic_DOM_Generated.div()((function (v2) {
                return {
                    className: "container",
                    children: v2
                };
            })(Data_Array.singleton(React_Basic_DOM_Generated.div()((function (v2) {
                return {
                    className: "col",
                    children: v2
                };
            })([ React_Basic_DOM_Generated.div()((function (v2) {
                return {
                    className: "my-3",
                    children: v2
                };
            })([ React_Basic_DOM_Generated.input()({
                className: "rounded-0 form-control",
                type: "file",
                id: "upload-file",
                onChange: onChange,
                accept: ".csv"
            }) ])) ]))))), React_Basic_DOM_Generated.hr()({}), sheetIndexerComponent({
                csvFile: v1.value0
            }) ]));
        });
    })();
};
var main = function __do() {
    var body = Control_Bind.bindFlipped(Effect.bindEffect)(Web_HTML_HTMLDocument.body)(Control_Bind.bindFlipped(Effect.bindEffect)(Web_HTML_Window.document)(Web_HTML.window))();
    if (body instanceof Data_Maybe.Nothing) {
        return Effect_Exception["throw"]("Could not find body.")();
    };
    if (body instanceof Data_Maybe.Just) {
        var app = mkAppComponent();
        return React_Basic_DOM.render(app({
            exampleCSV: MPP.raw
        }))(Web_HTML_HTMLElement.toElement(body.value0))();
    };
    throw new Error("Failed pattern match at Main (line 486, column 3 - line 490, column 53): " + [ body.constructor.name ]);
};
export {
    escapeRegExp,
    matchAllImpl
} from "./foreign.js";
export {
    Ignored,
    Interesting,
    Phrases,
    addToInteresting,
    wordInInteresting,
    inTheIndex,
    removeFromInteresting,
    WordIndex,
    Header,
    ColumnCellId,
    ColumnCell,
    wordsRegex,
    statsTable,
    matchAll,
    countStats,
    ColumnState,
    fromWordIndex,
    setPhrases,
    addPhrase,
    removePhrase,
    setClosedQuestion,
    hoistMaybe,
    mkSheetIndexerComponent,
    mkAppComponent,
    main,
    newtypeIgnored_,
    semigroupIgnored,
    monoidIgnored,
    newtypeInteresting_,
    semigroupInteresting,
    monoidInteresting,
    newtypePhrases_,
    eqPhrases,
    semigroupPhrases,
    monoidPhrases,
    newtypeWordIndex_,
    semigroupWordIndex,
    monoidWordIndex,
    eqHeader,
    ordHeader,
    newtypeHeader_,
    eqColumnCellId,
    ordColumnCellId,
    newtypeColumnCellId_,
    eqColumnCell,
    ordColumnCell,
    newtypeColumnCell_
};
